// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Caml_obj = require("rescript/lib/js/caml_obj.js");

function make(id, data) {
  return {
          id: id,
          state: data !== undefined ? ({
                TAG: /* Free */0,
                _0: data
              }) : undefined
        };
}

function transition(t, $$event) {
  var match = t.state;
  var id = t.id;
  if ($$event.TAG === /* Created */0) {
    return {
            TAG: /* Ok */0,
            _0: {
              id: id,
              state: $$event.state
            }
          };
  }
  if (match === undefined) {
    return {
            TAG: /* Error */1,
            _0: {
              TAG: /* Uninitialized */0,
              _0: id
            }
          };
  }
  switch (match.TAG | 0) {
    case /* Free */0 :
        var data = match._0;
        switch ($$event.TAG | 0) {
          case /* EditingStarted */1 :
              return {
                      TAG: /* Ok */0,
                      _0: {
                        id: id,
                        state: {
                          TAG: /* Editing */1,
                          by: $$event.by,
                          data: data
                        }
                      }
                    };
          case /* EditingEnded */2 :
              return {
                      TAG: /* Ok */0,
                      _0: {
                        id: id,
                        state: {
                          TAG: /* Free */0,
                          _0: data
                        }
                      }
                    };
          case /* HeadingModified */3 :
              return {
                      TAG: /* Ok */0,
                      _0: {
                        id: id,
                        state: {
                          TAG: /* Editing */1,
                          by: $$event.by,
                          data: {
                            heading: $$event.heading,
                            body: data.body,
                            tags: data.tags
                          }
                        }
                      }
                    };
          case /* BodyModified */4 :
              return {
                      TAG: /* Ok */0,
                      _0: {
                        id: id,
                        state: {
                          TAG: /* Editing */1,
                          by: $$event.by,
                          data: {
                            heading: data.heading,
                            body: $$event.body,
                            tags: data.tags
                          }
                        }
                      }
                    };
          case /* TagsModified */5 :
              return {
                      TAG: /* Ok */0,
                      _0: {
                        id: id,
                        state: {
                          TAG: /* Editing */1,
                          by: $$event.by,
                          data: {
                            heading: data.heading,
                            body: data.body,
                            tags: $$event.tags
                          }
                        }
                      }
                    };
          case /* Locked */6 :
              return {
                      TAG: /* Ok */0,
                      _0: {
                        id: id,
                        state: {
                          TAG: /* Locked */2,
                          by: $$event.by,
                          data: data
                        }
                      }
                    };
          
        }
    case /* Editing */1 :
        var data$1 = match.data;
        var editBy = match.by;
        switch ($$event.TAG | 0) {
          case /* EditingStarted */1 :
              return {
                      TAG: /* Error */1,
                      _0: {
                        TAG: /* Editing */2,
                        id: id,
                        by: editBy
                      }
                    };
          case /* EditingEnded */2 :
              if (Caml_obj.equal(editBy, $$event.by)) {
                return {
                        TAG: /* Ok */0,
                        _0: {
                          id: id,
                          state: {
                            TAG: /* Free */0,
                            _0: data$1
                          }
                        }
                      };
              } else {
                return {
                        TAG: /* Error */1,
                        _0: {
                          TAG: /* Editing */2,
                          id: id,
                          by: editBy
                        }
                      };
              }
          case /* HeadingModified */3 :
              var by = $$event.by;
              if (Caml_obj.equal(editBy, by)) {
                return {
                        TAG: /* Ok */0,
                        _0: {
                          id: id,
                          state: {
                            TAG: /* Editing */1,
                            by: by,
                            data: {
                              heading: $$event.heading,
                              body: data$1.body,
                              tags: data$1.tags
                            }
                          }
                        }
                      };
              } else {
                return {
                        TAG: /* Error */1,
                        _0: {
                          TAG: /* Editing */2,
                          id: id,
                          by: editBy
                        }
                      };
              }
          case /* BodyModified */4 :
              var by$1 = $$event.by;
              if (Caml_obj.equal(editBy, by$1)) {
                return {
                        TAG: /* Ok */0,
                        _0: {
                          id: id,
                          state: {
                            TAG: /* Editing */1,
                            by: by$1,
                            data: {
                              heading: data$1.heading,
                              body: $$event.body,
                              tags: data$1.tags
                            }
                          }
                        }
                      };
              } else {
                return {
                        TAG: /* Error */1,
                        _0: {
                          TAG: /* Editing */2,
                          id: id,
                          by: editBy
                        }
                      };
              }
          case /* TagsModified */5 :
              var by$2 = $$event.by;
              if (Caml_obj.equal(editBy, by$2)) {
                return {
                        TAG: /* Ok */0,
                        _0: {
                          id: id,
                          state: {
                            TAG: /* Editing */1,
                            by: by$2,
                            data: {
                              heading: data$1.heading,
                              body: data$1.body,
                              tags: $$event.tags
                            }
                          }
                        }
                      };
              } else {
                return {
                        TAG: /* Error */1,
                        _0: {
                          TAG: /* Editing */2,
                          id: id,
                          by: editBy
                        }
                      };
              }
          case /* Locked */6 :
              var lockBy = $$event.by;
              if (Caml_obj.equal(editBy, lockBy)) {
                return {
                        TAG: /* Ok */0,
                        _0: {
                          id: id,
                          state: {
                            TAG: /* Locked */2,
                            by: lockBy,
                            data: data$1
                          }
                        }
                      };
              } else {
                return {
                        TAG: /* Error */1,
                        _0: {
                          TAG: /* Editing */2,
                          id: id,
                          by: editBy
                        }
                      };
              }
          
        }
    case /* Locked */2 :
        return {
                TAG: /* Error */1,
                _0: {
                  TAG: /* Locked */1,
                  id: id,
                  by: match.by
                }
              };
    
  }
}

function create(t, date, state) {
  var $$event = {
    TAG: /* Created */0,
    date: date,
    state: state
  };
  return [
          transition(t, $$event),
          [$$event]
        ];
}

function modifyHeading(t, date, heading, by) {
  var $$event = {
    TAG: /* HeadingModified */3,
    date: date,
    heading: heading,
    by: by
  };
  return [
          transition(t, $$event),
          [$$event]
        ];
}

function modifyBody(t, date, body, by) {
  var $$event = {
    TAG: /* BodyModified */4,
    date: date,
    body: body,
    by: by
  };
  return [
          transition(t, $$event),
          [$$event]
        ];
}

function modifyTags(t, date, tags, by) {
  var $$event = {
    TAG: /* TagsModified */5,
    date: date,
    tags: tags,
    by: by
  };
  return [
          transition(t, $$event),
          [$$event]
        ];
}

function lock(t, date, by) {
  var $$event = {
    TAG: /* Locked */6,
    date: date,
    by: by
  };
  return [
          transition(t, $$event),
          [$$event]
        ];
}

var Command = {
  create: create,
  modifyHeading: modifyHeading,
  modifyBody: modifyBody,
  modifyTags: modifyTags,
  lock: lock
};

var Id;

var UserId;

exports.Id = Id;
exports.UserId = UserId;
exports.make = make;
exports.transition = transition;
exports.Command = Command;
/* No side effect */
