// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as Framework from "../Framework.bs.js";
import * as Council_Entity_Session from "../Entity/Council_Entity_Session.bs.js";

var Transition = Framework.Transition.Make(Council_Entity_Session);

function transition(t, $$event) {
  var match = t.state;
  var id = t.id;
  if (match !== undefined) {
    if ($$event.TAG === /* Created */0) {
      return {
              TAG: /* Error */1,
              _0: {
                TAG: /* AlreadyInitialized */1,
                id: id
              }
            };
    } else if (match.TAG === /* Member */0) {
      return {
              TAG: /* Error */1,
              _0: {
                TAG: /* AlreadyConnected */2,
                id: id,
                exist: match.member,
                newed: $$event.member
              }
            };
    } else {
      return {
              TAG: /* Ok */0,
              _0: {
                id: id,
                state: {
                  TAG: /* Member */0,
                  member: $$event.member,
                  data: match.data
                }
              }
            };
    }
  } else if ($$event.TAG === /* Created */0) {
    return {
            TAG: /* Ok */0,
            _0: {
              id: id,
              state: {
                TAG: /* Anonymous */1,
                data: $$event.data
              }
            }
          };
  } else {
    return {
            TAG: /* Error */1,
            _0: {
              TAG: /* Uninitialized */0,
              id: id
            }
          };
  }
}

function create(t, date, data) {
  return Curry._3(Transition.run, transition, t, {
              TAG: /* Created */0,
              date: date,
              data: data
            });
}

function createWithUser(t, date, data, member) {
  var event1 = {
    TAG: /* Created */0,
    date: date,
    data: data
  };
  var event2 = {
    TAG: /* MemberConnected */1,
    date: date,
    member: member
  };
  return Curry._3(Transition.runMany, transition, t, [
              event1,
              event2
            ]);
}

function connectUser(t, date, member) {
  return Curry._3(Transition.run, transition, t, {
              TAG: /* MemberConnected */1,
              date: date,
              member: member
            });
}

export {
  Transition ,
  transition ,
  create ,
  createWithUser ,
  connectUser ,
}
/* Transition Not a pure module */
