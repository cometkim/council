// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("rescript/lib/js/curry.js");
var Js_exn = require("rescript/lib/js/js_exn.js");
var Caml_js_exceptions = require("rescript/lib/js/caml_js_exceptions.js");
var Council_Entity_Session = require("../Entity/Council_Entity_Session.bs.js");
var Council_Entity_Session_Logic = require("../Entity/Council_Entity_Session_Logic.bs.js");

function make(eventStore, sessionRepository) {
  return {
          eventStore: eventStore,
          sessionRepository: sessionRepository
        };
}

async function createSession(t, id, date, data) {
  var session = Council_Entity_Session.make(id, undefined, undefined, undefined);
  var session$1 = Council_Entity_Session_Logic.create(session, date, data);
  if (session$1.TAG !== /* Ok */0) {
    return session$1;
  }
  var session$2;
  try {
    session$2 = await Curry._1(t.eventStore.persist, {
          TAG: /* Session */0,
          _0: session$1._0
        });
  }
  catch (raw_exn){
    var exn = Caml_js_exceptions.internalToOCamlException(raw_exn);
    if (exn.RE_EXN_ID === Js_exn.$$Error) {
      return {
              TAG: /* Error */1,
              _0: {
                TAG: /* IOError */0,
                id: id,
                exn: exn._1
              }
            };
    }
    throw exn;
  }
  if (session$2.TAG === /* Session */0) {
    return {
            TAG: /* Ok */0,
            _0: session$2._0
          };
  } else {
    return {
            TAG: /* Error */1,
            _0: /* Invariant */0
          };
  }
}

async function findOrCreateSession(t, id, date, data) {
  var session;
  try {
    session = await Curry._1(t.sessionRepository.find, id);
  }
  catch (raw_exn){
    var exn = Caml_js_exceptions.internalToOCamlException(raw_exn);
    if (exn.RE_EXN_ID === Js_exn.$$Error) {
      return {
              TAG: /* Error */1,
              _0: {
                TAG: /* IOError */0,
                id: id,
                exn: exn._1
              }
            };
    }
    throw exn;
  }
  if (session !== undefined) {
    return {
            TAG: /* Ok */0,
            _0: session
          };
  }
  var session$1 = await createSession(t, id, date, data);
  if (session$1.TAG === /* Ok */0) {
    return {
            TAG: /* Ok */0,
            _0: session$1._0
          };
  } else {
    return session$1;
  }
}

var Session;

var SessionLogic;

exports.Session = Session;
exports.SessionLogic = SessionLogic;
exports.make = make;
exports.createSession = createSession;
exports.findOrCreateSession = findOrCreateSession;
/* Council_Entity_Session_Logic Not a pure module */
