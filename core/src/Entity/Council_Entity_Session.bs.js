// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Transition from "../Transition.bs.js";

function transition(t, $$event) {
  var match = t.state;
  var id = t.id;
  if (match !== undefined) {
    if ($$event.TAG === /* Created */0) {
      return {
              TAG: /* Error */1,
              _0: {
                TAG: /* AlreadyInitialized */1,
                id: id
              }
            };
    } else if (match.TAG === /* User */0) {
      return {
              TAG: /* Error */1,
              _0: {
                TAG: /* AlreadyConnected */2,
                id: id,
                exist: match.user,
                newed: $$event.user
              }
            };
    } else {
      return {
              TAG: /* Ok */0,
              _0: {
                id: id,
                state: {
                  TAG: /* User */0,
                  user: $$event.user,
                  data: match.data
                }
              }
            };
    }
  } else if ($$event.TAG === /* Created */0) {
    return {
            TAG: /* Ok */0,
            _0: {
              id: id,
              state: {
                TAG: /* Anonymous */1,
                data: $$event.data
              }
            }
          };
  } else {
    return {
            TAG: /* Error */1,
            _0: {
              TAG: /* Uninitialized */0,
              id: id
            }
          };
  }
}

function make(id, data) {
  return {
          id: id,
          state: data !== undefined ? ({
                TAG: /* Anonymous */1,
                data: data
              }) : undefined
        };
}

function restore(t, events) {
  return Transition.runMany(transition, t, events)[0];
}

function create(t, date, data) {
  return Transition.run(transition, t, {
              TAG: /* Created */0,
              date: date,
              data: data
            });
}

function createWithUser(t, date, data, user) {
  var event1 = {
    TAG: /* Created */0,
    date: date,
    data: data
  };
  var event2 = {
    TAG: /* UserConnected */1,
    date: date,
    user: user
  };
  return Transition.runMany(transition, t, [
              event1,
              event2
            ]);
}

function connectUser(t, date, user) {
  return Transition.run(transition, t, {
              TAG: /* UserConnected */1,
              date: date,
              user: user
            });
}

var Command = {
  create: create,
  createWithUser: createWithUser,
  connectUser: connectUser
};

var Id;

var UserId;

export {
  Id ,
  UserId ,
  transition ,
  make ,
  restore ,
  Command ,
}
/* No side effect */
