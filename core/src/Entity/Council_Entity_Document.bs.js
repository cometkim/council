// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Caml_obj from "rescript/lib/es6/caml_obj.js";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";

function make(id, data) {
  return {
          id: id,
          data: data
        };
}

function transition(t, $$event) {
  var data = t.data;
  var id = t.id;
  if ($$event.TAG === /* Created */0) {
    return {
            TAG: /* Ok */0,
            _0: {
              id: id,
              data: $$event.data
            }
          };
  }
  if (data === undefined) {
    return {
            TAG: /* Error */1,
            _0: /* Uninitialized */{
              _0: id
            }
          };
  }
  switch ($$event.TAG | 0) {
    case /* SectionAdded */1 :
        return {
                TAG: /* Ok */0,
                _0: {
                  id: id,
                  data: {
                    title: data.title,
                    sections: Belt_Array.concat(data.sections, [$$event.section]),
                    tags: data.tags,
                    owner: data.owner,
                    responsibility: data.responsibility
                  }
                }
              };
    case /* SectionDeleted */2 :
        var deleted = $$event.section;
        return {
                TAG: /* Ok */0,
                _0: {
                  id: id,
                  data: {
                    title: data.title,
                    sections: Belt_Array.keep(data.sections, (function (id) {
                            return Caml_obj.notequal(id, deleted);
                          })),
                    tags: data.tags,
                    owner: data.owner,
                    responsibility: data.responsibility
                  }
                }
              };
    case /* ResponsibilityAssigned */3 :
        return {
                TAG: /* Ok */0,
                _0: {
                  id: id,
                  data: {
                    title: data.title,
                    sections: data.sections,
                    tags: data.tags,
                    owner: data.owner,
                    responsibility: $$event.responsibility
                  }
                }
              };
    case /* TagsModified */4 :
        return {
                TAG: /* Ok */0,
                _0: {
                  id: id,
                  data: {
                    title: data.title,
                    sections: data.sections,
                    tags: $$event.tags,
                    owner: data.owner,
                    responsibility: data.responsibility
                  }
                }
              };
    
  }
}

function create(t, date, data) {
  var $$event = {
    TAG: /* Created */0,
    date: date,
    data: data
  };
  return [
          transition(t, $$event),
          [$$event]
        ];
}

function addSection(t, date, section) {
  var $$event = {
    TAG: /* SectionAdded */1,
    date: date,
    section: section
  };
  return [
          transition(t, $$event),
          [$$event]
        ];
}

function deleteSection(t, date, section) {
  var $$event = {
    TAG: /* SectionDeleted */2,
    date: date,
    section: section
  };
  return [
          transition(t, $$event),
          [$$event]
        ];
}

function assignResponsibility(t, date, responsibility) {
  var $$event = {
    TAG: /* ResponsibilityAssigned */3,
    date: date,
    responsibility: responsibility
  };
  return [
          transition(t, $$event),
          [$$event]
        ];
}

function modifyTags(t, date, tags) {
  var $$event = {
    TAG: /* TagsModified */4,
    date: date,
    tags: tags
  };
  return [
          transition(t, $$event),
          [$$event]
        ];
}

var Command = {
  create: create,
  addSection: addSection,
  deleteSection: deleteSection,
  assignResponsibility: assignResponsibility,
  modifyTags: modifyTags
};

var Id;

var SectionId;

var UserId;

export {
  Id ,
  SectionId ,
  UserId ,
  make ,
  transition ,
  Command ,
}
/* No side effect */
